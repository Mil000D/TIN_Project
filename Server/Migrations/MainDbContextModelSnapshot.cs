// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TIN_Project.Server.Context;

#nullable disable

namespace TIN_Project.Server.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("GenreMovie", b =>
                {
                    b.Property<int>("MoviesIdMovie")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenresIdGenre")
                        .HasColumnType("INTEGER");

                    b.HasKey("MoviesIdMovie", "GenresIdGenre");

                    b.HasIndex("GenresIdGenre");

                    b.ToTable("GenreMovie");

                    b.HasData(
                        new
                        {
                            MoviesIdMovie = 1,
                            GenresIdGenre = 1
                        },
                        new
                        {
                            MoviesIdMovie = 1,
                            GenresIdGenre = 11
                        },
                        new
                        {
                            MoviesIdMovie = 2,
                            GenresIdGenre = 11
                        },
                        new
                        {
                            MoviesIdMovie = 2,
                            GenresIdGenre = 12
                        },
                        new
                        {
                            MoviesIdMovie = 3,
                            GenresIdGenre = 1
                        },
                        new
                        {
                            MoviesIdMovie = 3,
                            GenresIdGenre = 12
                        },
                        new
                        {
                            MoviesIdMovie = 4,
                            GenresIdGenre = 6
                        },
                        new
                        {
                            MoviesIdMovie = 5,
                            GenresIdGenre = 11
                        },
                        new
                        {
                            MoviesIdMovie = 6,
                            GenresIdGenre = 4
                        },
                        new
                        {
                            MoviesIdMovie = 6,
                            GenresIdGenre = 12
                        },
                        new
                        {
                            MoviesIdMovie = 7,
                            GenresIdGenre = 13
                        });
                });

            modelBuilder.Entity("TIN_Project.Server.Models.Cinema", b =>
                {
                    b.Property<int>("IdCinema")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("IdCinema");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            IdCinema = 1,
                            Address = "Złota 59, 00-120 Warszawa",
                            Name = "Multikino"
                        },
                        new
                        {
                            IdCinema = 2,
                            Address = "Wołoska 12, 02-675 Warszawa",
                            Name = "Cinema City"
                        },
                        new
                        {
                            IdCinema = 3,
                            Address = "Gen. W. Andersa 5, 00-147 Warszawa",
                            Name = "Kino Muranów"
                        },
                        new
                        {
                            IdCinema = 4,
                            Address = "Marszałkowska 28, 00-576 Warszawa",
                            Name = "Kino Luna"
                        },
                        new
                        {
                            IdCinema = 5,
                            Address = "Chmielna 33, 00-021 Warszawa",
                            Name = "Kino Atlantic"
                        },
                        new
                        {
                            IdCinema = 6,
                            Address = "Ludwika Narbutta 50A, 02-541 Warszawa",
                            Name = "Kino Iluzjon"
                        });
                });

            modelBuilder.Entity("TIN_Project.Server.Models.Genre", b =>
                {
                    b.Property<int>("IdGenre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PolishName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdGenre");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            IdGenre = 1,
                            EnglishName = "Action",
                            PolishName = "Akcja"
                        },
                        new
                        {
                            IdGenre = 2,
                            EnglishName = "Adventure",
                            PolishName = "Przygodowy"
                        },
                        new
                        {
                            IdGenre = 3,
                            EnglishName = "Comedy",
                            PolishName = "Komedia"
                        },
                        new
                        {
                            IdGenre = 4,
                            EnglishName = "Crime",
                            PolishName = "Kryminalny"
                        },
                        new
                        {
                            IdGenre = 5,
                            EnglishName = "Drama",
                            PolishName = "Dramat"
                        },
                        new
                        {
                            IdGenre = 6,
                            EnglishName = "Fantasy",
                            PolishName = "Fantasy"
                        },
                        new
                        {
                            IdGenre = 7,
                            EnglishName = "Historical",
                            PolishName = "Historyczny"
                        },
                        new
                        {
                            IdGenre = 8,
                            EnglishName = "Horror",
                            PolishName = "Horror"
                        },
                        new
                        {
                            IdGenre = 9,
                            EnglishName = "Mystery",
                            PolishName = "Tajemnica"
                        },
                        new
                        {
                            IdGenre = 10,
                            EnglishName = "Romance",
                            PolishName = "Romans"
                        },
                        new
                        {
                            IdGenre = 11,
                            EnglishName = "Science Fiction",
                            PolishName = "Science Fiction"
                        },
                        new
                        {
                            IdGenre = 12,
                            EnglishName = "Thriller",
                            PolishName = "Thriller"
                        },
                        new
                        {
                            IdGenre = 13,
                            EnglishName = "Western",
                            PolishName = "Western"
                        });
                });

            modelBuilder.Entity("TIN_Project.Server.Models.Movie", b =>
                {
                    b.Property<int>("IdMovie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnglishDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("EnglishTitle")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("PolishDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("PolishTitle")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("PosterUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrailerUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("IdMovie");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            IdMovie = 1,
                            EnglishDescription = "A team of superheroes save the world from a powerful threat.",
                            EnglishTitle = "The Avengers",
                            PolishDescription = "Zespół superbohaterów ratuje świat przed potężnym zagrożeniem.",
                            PolishTitle = "Avengers",
                            PosterUrl = "https://www.themoviedb.org/t/p/w600_and_h900_bestv2/RYMX2wcKCBAr24UyPD7xwmjaTn.jpg",
                            TrailerUrl = "https://www.youtube.com/watch?v=eOrNdBpGMv8"
                        },
                        new
                        {
                            IdMovie = 2,
                            EnglishDescription = "A thief enters people's dreams to steal information.",
                            EnglishTitle = "Inception",
                            PolishDescription = "Złodziej wkracza do snów ludzi, aby ukraść informacje.",
                            PolishTitle = "Incepcja",
                            PosterUrl = "https://www.themoviedb.org/t/p/w600_and_h900_bestv2/oYuLEt3zVCKq57qu2F8dT7NIa6f.jpg",
                            TrailerUrl = "https://www.youtube.com/watch?v=YoHD9XEInc0"
                        },
                        new
                        {
                            IdMovie = 3,
                            EnglishDescription = "A vigilante fights crime in Gotham City.",
                            EnglishTitle = "The Dark Knight",
                            PolishDescription = "Samozwańczy sprawiedliwy walczy ze złem w Gotham City.",
                            PolishTitle = "Mroczny Rycerz",
                            PosterUrl = "https://www.themoviedb.org/t/p/original/qJ2tW6WMUDux911r6m7haRef0WH.jpg",
                            TrailerUrl = "https://www.youtube.com/watch?v=EXeTwQWrcwY"
                        },
                        new
                        {
                            IdMovie = 4,
                            EnglishDescription = "A hobbit embarks on a journey to destroy a powerful ring.",
                            EnglishTitle = "The Lord of the Rings: The Fellowship of the Ring",
                            PolishDescription = "Hobbit wyrusza w podróż, aby zniszczyć potężny pierścień.",
                            PolishTitle = "Władca Pierścieni: Drużyna Pierścienia",
                            PosterUrl = "https://www.themoviedb.org/t/p/original/6oom5QYQ2yQTMJIbnvbkBL9cHo6.jpg",
                            TrailerUrl = "https://www.youtube.com/watch?v=V75dMMIW2B4"
                        },
                        new
                        {
                            IdMovie = 5,
                            EnglishDescription = "A hacker discovers that the world is a simulation.",
                            EnglishTitle = "The Matrix",
                            PolishDescription = "Haker odkrywa, że świat jest symulacją.",
                            PolishTitle = "Matrix",
                            PosterUrl = "https://www.themoviedb.org/t/p/w600_and_h900_bestv2/qK76PKQLd6zlMn0u83Ej9YQOqPL.jpg",
                            TrailerUrl = "https://www.youtube.com/watch?v=m8e-FF8MsqU"
                        },
                        new
                        {
                            IdMovie = 6,
                            EnglishDescription = "Various interconnected stories of criminals, lowlifes, and a mysterious briefcase.",
                            EnglishTitle = "Pulp Fiction",
                            PolishDescription = "Różne powiązane ze sobą historie kryminalistów, łotrów i tajemniczej walizki.",
                            PolishTitle = "Pulp Fiction",
                            PosterUrl = "https://www.themoviedb.org/t/p/w1280/d5iIlFn5s0ImszYzBPb8JPIfbXD.jpg",
                            TrailerUrl = "https://www.youtube.com/watch?v=s7EdQ4FqbhY"
                        },
                        new
                        {
                            IdMovie = 7,
                            EnglishDescription = "A freed slave sets out to rescue his wife from a brutal Mississippi plantation owner.",
                            EnglishTitle = "Django Unchained",
                            PolishDescription = "Uwolniony niewolnik wyrusza, aby uratować swoją żonę przed brutalnym właścicielem plantacji w Missisipi.",
                            PolishTitle = "Django",
                            PosterUrl = "https://www.themoviedb.org/t/p/w600_and_h900_bestv2/6UjfRbaSdpNeaJvLIPTdhCO6yzJ.jpg",
                            TrailerUrl = "https://www.youtube.com/watch?v=_iH0UBYDI4g"
                        });
                });

            modelBuilder.Entity("TIN_Project.Server.Models.MovieRepertoire", b =>
                {
                    b.Property<int>("IdMovieRepertoire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdMovie")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdRepertoire")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("ShowTime")
                        .HasColumnType("TEXT");

                    b.HasKey("IdMovieRepertoire");

                    b.HasIndex("IdMovie");

                    b.HasIndex("IdRepertoire");

                    b.ToTable("MovieRepertoires");

                    b.HasData(
                        new
                        {
                            IdMovieRepertoire = 1,
                            IdMovie = 1,
                            IdRepertoire = 1,
                            ShowTime = new TimeOnly(15, 49, 16, 990).Add(TimeSpan.FromTicks(2283))
                        },
                        new
                        {
                            IdMovieRepertoire = 2,
                            IdMovie = 2,
                            IdRepertoire = 1,
                            ShowTime = new TimeOnly(16, 49, 16, 990).Add(TimeSpan.FromTicks(2355))
                        },
                        new
                        {
                            IdMovieRepertoire = 3,
                            IdMovie = 3,
                            IdRepertoire = 1,
                            ShowTime = new TimeOnly(17, 49, 16, 990).Add(TimeSpan.FromTicks(2357))
                        },
                        new
                        {
                            IdMovieRepertoire = 4,
                            IdMovie = 4,
                            IdRepertoire = 1,
                            ShowTime = new TimeOnly(18, 49, 16, 990).Add(TimeSpan.FromTicks(2360))
                        },
                        new
                        {
                            IdMovieRepertoire = 5,
                            IdMovie = 5,
                            IdRepertoire = 2,
                            ShowTime = new TimeOnly(15, 49, 16, 990).Add(TimeSpan.FromTicks(2362))
                        },
                        new
                        {
                            IdMovieRepertoire = 6,
                            IdMovie = 6,
                            IdRepertoire = 2,
                            ShowTime = new TimeOnly(16, 49, 16, 990).Add(TimeSpan.FromTicks(2364))
                        },
                        new
                        {
                            IdMovieRepertoire = 7,
                            IdMovie = 7,
                            IdRepertoire = 2,
                            ShowTime = new TimeOnly(17, 49, 16, 990).Add(TimeSpan.FromTicks(2366))
                        },
                        new
                        {
                            IdMovieRepertoire = 8,
                            IdMovie = 1,
                            IdRepertoire = 2,
                            ShowTime = new TimeOnly(18, 49, 16, 990).Add(TimeSpan.FromTicks(2368))
                        },
                        new
                        {
                            IdMovieRepertoire = 9,
                            IdMovie = 2,
                            IdRepertoire = 3,
                            ShowTime = new TimeOnly(15, 49, 16, 990).Add(TimeSpan.FromTicks(2370))
                        },
                        new
                        {
                            IdMovieRepertoire = 10,
                            IdMovie = 3,
                            IdRepertoire = 3,
                            ShowTime = new TimeOnly(16, 49, 16, 990).Add(TimeSpan.FromTicks(2372))
                        },
                        new
                        {
                            IdMovieRepertoire = 11,
                            IdMovie = 4,
                            IdRepertoire = 3,
                            ShowTime = new TimeOnly(17, 49, 16, 990).Add(TimeSpan.FromTicks(2374))
                        },
                        new
                        {
                            IdMovieRepertoire = 12,
                            IdMovie = 5,
                            IdRepertoire = 3,
                            ShowTime = new TimeOnly(18, 49, 16, 990).Add(TimeSpan.FromTicks(2376))
                        },
                        new
                        {
                            IdMovieRepertoire = 13,
                            IdMovie = 6,
                            IdRepertoire = 4,
                            ShowTime = new TimeOnly(15, 49, 16, 990).Add(TimeSpan.FromTicks(2378))
                        },
                        new
                        {
                            IdMovieRepertoire = 14,
                            IdMovie = 7,
                            IdRepertoire = 4,
                            ShowTime = new TimeOnly(16, 49, 16, 990).Add(TimeSpan.FromTicks(2380))
                        },
                        new
                        {
                            IdMovieRepertoire = 15,
                            IdMovie = 1,
                            IdRepertoire = 4,
                            ShowTime = new TimeOnly(17, 49, 16, 990).Add(TimeSpan.FromTicks(2382))
                        },
                        new
                        {
                            IdMovieRepertoire = 16,
                            IdMovie = 2,
                            IdRepertoire = 4,
                            ShowTime = new TimeOnly(18, 49, 16, 990).Add(TimeSpan.FromTicks(2384))
                        },
                        new
                        {
                            IdMovieRepertoire = 17,
                            IdMovie = 3,
                            IdRepertoire = 5,
                            ShowTime = new TimeOnly(15, 49, 16, 990).Add(TimeSpan.FromTicks(2385))
                        },
                        new
                        {
                            IdMovieRepertoire = 18,
                            IdMovie = 4,
                            IdRepertoire = 5,
                            ShowTime = new TimeOnly(16, 49, 16, 990).Add(TimeSpan.FromTicks(2387))
                        },
                        new
                        {
                            IdMovieRepertoire = 19,
                            IdMovie = 5,
                            IdRepertoire = 5,
                            ShowTime = new TimeOnly(17, 49, 16, 990).Add(TimeSpan.FromTicks(2389))
                        },
                        new
                        {
                            IdMovieRepertoire = 20,
                            IdMovie = 6,
                            IdRepertoire = 5,
                            ShowTime = new TimeOnly(18, 49, 16, 990).Add(TimeSpan.FromTicks(2391))
                        },
                        new
                        {
                            IdMovieRepertoire = 21,
                            IdMovie = 7,
                            IdRepertoire = 6,
                            ShowTime = new TimeOnly(15, 49, 16, 990).Add(TimeSpan.FromTicks(2393))
                        },
                        new
                        {
                            IdMovieRepertoire = 22,
                            IdMovie = 1,
                            IdRepertoire = 6,
                            ShowTime = new TimeOnly(16, 49, 16, 990).Add(TimeSpan.FromTicks(2395))
                        },
                        new
                        {
                            IdMovieRepertoire = 23,
                            IdMovie = 2,
                            IdRepertoire = 6,
                            ShowTime = new TimeOnly(17, 49, 16, 990).Add(TimeSpan.FromTicks(2397))
                        },
                        new
                        {
                            IdMovieRepertoire = 24,
                            IdMovie = 3,
                            IdRepertoire = 6,
                            ShowTime = new TimeOnly(18, 49, 16, 990).Add(TimeSpan.FromTicks(2399))
                        },
                        new
                        {
                            IdMovieRepertoire = 25,
                            IdMovie = 4,
                            IdRepertoire = 7,
                            ShowTime = new TimeOnly(15, 49, 16, 990).Add(TimeSpan.FromTicks(2401))
                        },
                        new
                        {
                            IdMovieRepertoire = 26,
                            IdMovie = 5,
                            IdRepertoire = 7,
                            ShowTime = new TimeOnly(16, 49, 16, 990).Add(TimeSpan.FromTicks(2403))
                        },
                        new
                        {
                            IdMovieRepertoire = 27,
                            IdMovie = 6,
                            IdRepertoire = 7,
                            ShowTime = new TimeOnly(17, 49, 16, 990).Add(TimeSpan.FromTicks(2405))
                        },
                        new
                        {
                            IdMovieRepertoire = 28,
                            IdMovie = 7,
                            IdRepertoire = 7,
                            ShowTime = new TimeOnly(18, 49, 16, 990).Add(TimeSpan.FromTicks(2407))
                        },
                        new
                        {
                            IdMovieRepertoire = 29,
                            IdMovie = 1,
                            IdRepertoire = 8,
                            ShowTime = new TimeOnly(15, 49, 16, 990).Add(TimeSpan.FromTicks(2409))
                        },
                        new
                        {
                            IdMovieRepertoire = 30,
                            IdMovie = 2,
                            IdRepertoire = 8,
                            ShowTime = new TimeOnly(16, 49, 16, 990).Add(TimeSpan.FromTicks(2410))
                        },
                        new
                        {
                            IdMovieRepertoire = 31,
                            IdMovie = 3,
                            IdRepertoire = 8,
                            ShowTime = new TimeOnly(17, 49, 16, 990).Add(TimeSpan.FromTicks(2412))
                        },
                        new
                        {
                            IdMovieRepertoire = 32,
                            IdMovie = 4,
                            IdRepertoire = 8,
                            ShowTime = new TimeOnly(18, 49, 16, 990).Add(TimeSpan.FromTicks(2414))
                        },
                        new
                        {
                            IdMovieRepertoire = 33,
                            IdMovie = 5,
                            IdRepertoire = 9,
                            ShowTime = new TimeOnly(15, 49, 16, 990).Add(TimeSpan.FromTicks(2416))
                        },
                        new
                        {
                            IdMovieRepertoire = 34,
                            IdMovie = 6,
                            IdRepertoire = 9,
                            ShowTime = new TimeOnly(16, 49, 16, 990).Add(TimeSpan.FromTicks(2418))
                        },
                        new
                        {
                            IdMovieRepertoire = 35,
                            IdMovie = 7,
                            IdRepertoire = 9,
                            ShowTime = new TimeOnly(17, 49, 16, 990).Add(TimeSpan.FromTicks(2420))
                        },
                        new
                        {
                            IdMovieRepertoire = 36,
                            IdMovie = 1,
                            IdRepertoire = 9,
                            ShowTime = new TimeOnly(18, 49, 16, 990).Add(TimeSpan.FromTicks(2422))
                        },
                        new
                        {
                            IdMovieRepertoire = 37,
                            IdMovie = 2,
                            IdRepertoire = 10,
                            ShowTime = new TimeOnly(15, 49, 16, 990).Add(TimeSpan.FromTicks(2424))
                        },
                        new
                        {
                            IdMovieRepertoire = 38,
                            IdMovie = 3,
                            IdRepertoire = 10,
                            ShowTime = new TimeOnly(16, 49, 16, 990).Add(TimeSpan.FromTicks(2426))
                        },
                        new
                        {
                            IdMovieRepertoire = 39,
                            IdMovie = 4,
                            IdRepertoire = 10,
                            ShowTime = new TimeOnly(17, 49, 16, 990).Add(TimeSpan.FromTicks(2428))
                        },
                        new
                        {
                            IdMovieRepertoire = 40,
                            IdMovie = 5,
                            IdRepertoire = 10,
                            ShowTime = new TimeOnly(18, 49, 16, 990).Add(TimeSpan.FromTicks(2430))
                        },
                        new
                        {
                            IdMovieRepertoire = 41,
                            IdMovie = 6,
                            IdRepertoire = 11,
                            ShowTime = new TimeOnly(15, 49, 16, 990).Add(TimeSpan.FromTicks(2432))
                        },
                        new
                        {
                            IdMovieRepertoire = 42,
                            IdMovie = 7,
                            IdRepertoire = 11,
                            ShowTime = new TimeOnly(16, 49, 16, 990).Add(TimeSpan.FromTicks(2433))
                        });
                });

            modelBuilder.Entity("TIN_Project.Server.Models.Order", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdMovieRepertoire")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdUser", "IdMovieRepertoire");

                    b.HasIndex("IdMovieRepertoire");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            IdUser = 2,
                            IdMovieRepertoire = 7,
                            IsPaid = true
                        },
                        new
                        {
                            IdUser = 2,
                            IdMovieRepertoire = 8,
                            IsPaid = false
                        },
                        new
                        {
                            IdUser = 2,
                            IdMovieRepertoire = 9,
                            IsPaid = true
                        },
                        new
                        {
                            IdUser = 2,
                            IdMovieRepertoire = 10,
                            IsPaid = false
                        },
                        new
                        {
                            IdUser = 2,
                            IdMovieRepertoire = 11,
                            IsPaid = true
                        },
                        new
                        {
                            IdUser = 2,
                            IdMovieRepertoire = 12,
                            IsPaid = false
                        });
                });

            modelBuilder.Entity("TIN_Project.Server.Models.Repertoire", b =>
                {
                    b.Property<int>("IdRepertoire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCinema")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdRepertoire");

                    b.HasIndex("IdCinema");

                    b.ToTable("Repertoires");

                    b.HasData(
                        new
                        {
                            IdRepertoire = 1,
                            Date = new DateOnly(2024, 1, 10),
                            IdCinema = 1
                        },
                        new
                        {
                            IdRepertoire = 2,
                            Date = new DateOnly(2024, 1, 11),
                            IdCinema = 1
                        },
                        new
                        {
                            IdRepertoire = 3,
                            Date = new DateOnly(2024, 1, 12),
                            IdCinema = 1
                        },
                        new
                        {
                            IdRepertoire = 4,
                            Date = new DateOnly(2024, 1, 13),
                            IdCinema = 1
                        },
                        new
                        {
                            IdRepertoire = 5,
                            Date = new DateOnly(2024, 1, 14),
                            IdCinema = 1
                        },
                        new
                        {
                            IdRepertoire = 6,
                            Date = new DateOnly(2024, 1, 10),
                            IdCinema = 2
                        },
                        new
                        {
                            IdRepertoire = 7,
                            Date = new DateOnly(2024, 1, 11),
                            IdCinema = 2
                        },
                        new
                        {
                            IdRepertoire = 8,
                            Date = new DateOnly(2024, 1, 12),
                            IdCinema = 2
                        },
                        new
                        {
                            IdRepertoire = 9,
                            Date = new DateOnly(2024, 1, 13),
                            IdCinema = 2
                        },
                        new
                        {
                            IdRepertoire = 10,
                            Date = new DateOnly(2024, 1, 14),
                            IdCinema = 2
                        },
                        new
                        {
                            IdRepertoire = 11,
                            Date = new DateOnly(2024, 1, 10),
                            IdCinema = 3
                        },
                        new
                        {
                            IdRepertoire = 12,
                            Date = new DateOnly(2024, 1, 11),
                            IdCinema = 3
                        },
                        new
                        {
                            IdRepertoire = 13,
                            Date = new DateOnly(2024, 1, 12),
                            IdCinema = 3
                        },
                        new
                        {
                            IdRepertoire = 14,
                            Date = new DateOnly(2024, 1, 13),
                            IdCinema = 3
                        },
                        new
                        {
                            IdRepertoire = 15,
                            Date = new DateOnly(2024, 1, 14),
                            IdCinema = 3
                        },
                        new
                        {
                            IdRepertoire = 16,
                            Date = new DateOnly(2024, 1, 10),
                            IdCinema = 4
                        },
                        new
                        {
                            IdRepertoire = 17,
                            Date = new DateOnly(2024, 1, 11),
                            IdCinema = 4
                        },
                        new
                        {
                            IdRepertoire = 18,
                            Date = new DateOnly(2024, 1, 12),
                            IdCinema = 4
                        },
                        new
                        {
                            IdRepertoire = 19,
                            Date = new DateOnly(2024, 1, 13),
                            IdCinema = 4
                        },
                        new
                        {
                            IdRepertoire = 20,
                            Date = new DateOnly(2024, 1, 14),
                            IdCinema = 4
                        },
                        new
                        {
                            IdRepertoire = 21,
                            Date = new DateOnly(2024, 1, 10),
                            IdCinema = 5
                        },
                        new
                        {
                            IdRepertoire = 22,
                            Date = new DateOnly(2024, 1, 11),
                            IdCinema = 5
                        },
                        new
                        {
                            IdRepertoire = 23,
                            Date = new DateOnly(2024, 1, 12),
                            IdCinema = 5
                        },
                        new
                        {
                            IdRepertoire = 24,
                            Date = new DateOnly(2024, 1, 13),
                            IdCinema = 5
                        },
                        new
                        {
                            IdRepertoire = 25,
                            Date = new DateOnly(2024, 1, 14),
                            IdCinema = 5
                        },
                        new
                        {
                            IdRepertoire = 26,
                            Date = new DateOnly(2024, 1, 10),
                            IdCinema = 6
                        },
                        new
                        {
                            IdRepertoire = 27,
                            Date = new DateOnly(2024, 1, 11),
                            IdCinema = 6
                        },
                        new
                        {
                            IdRepertoire = 28,
                            Date = new DateOnly(2024, 1, 12),
                            IdCinema = 6
                        },
                        new
                        {
                            IdRepertoire = 29,
                            Date = new DateOnly(2024, 1, 13),
                            IdCinema = 6
                        },
                        new
                        {
                            IdRepertoire = 30,
                            Date = new DateOnly(2024, 1, 14),
                            IdCinema = 6
                        });
                });

            modelBuilder.Entity("TIN_Project.Server.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RefreshTokenExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("IdUser");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            IdUser = 1,
                            BirthDate = new DateOnly(2000, 1, 1),
                            Email = "superuser@superuser.com",
                            Name = "Superuser",
                            Password = "password",
                            Role = 0,
                            Surname = "Superuser",
                            Username = "superuser"
                        },
                        new
                        {
                            IdUser = 2,
                            BirthDate = new DateOnly(1999, 1, 1),
                            Email = "johndoe@doe.com",
                            Name = "John",
                            Password = "password",
                            Role = 2,
                            Surname = "Doe",
                            Username = "username"
                        },
                        new
                        {
                            IdUser = 3,
                            BirthDate = new DateOnly(2000, 1, 1),
                            Email = "admin@admin.com",
                            Name = "Admin",
                            Password = "password",
                            Role = 1,
                            Surname = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("GenreMovie", b =>
                {
                    b.HasOne("TIN_Project.Server.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresIdGenre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TIN_Project.Server.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesIdMovie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TIN_Project.Server.Models.MovieRepertoire", b =>
                {
                    b.HasOne("TIN_Project.Server.Models.Movie", "Movie")
                        .WithMany("MovieRepertoires")
                        .HasForeignKey("IdMovie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TIN_Project.Server.Models.Repertoire", "Repertoire")
                        .WithMany("MovieRepertoires")
                        .HasForeignKey("IdRepertoire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Repertoire");
                });

            modelBuilder.Entity("TIN_Project.Server.Models.Order", b =>
                {
                    b.HasOne("TIN_Project.Server.Models.MovieRepertoire", "MovieRepertoire")
                        .WithMany("Orders")
                        .HasForeignKey("IdMovieRepertoire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TIN_Project.Server.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieRepertoire");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TIN_Project.Server.Models.Repertoire", b =>
                {
                    b.HasOne("TIN_Project.Server.Models.Cinema", "Cinema")
                        .WithMany("Repertoires")
                        .HasForeignKey("IdCinema")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("TIN_Project.Server.Models.Cinema", b =>
                {
                    b.Navigation("Repertoires");
                });

            modelBuilder.Entity("TIN_Project.Server.Models.Movie", b =>
                {
                    b.Navigation("MovieRepertoires");
                });

            modelBuilder.Entity("TIN_Project.Server.Models.MovieRepertoire", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TIN_Project.Server.Models.Repertoire", b =>
                {
                    b.Navigation("MovieRepertoires");
                });

            modelBuilder.Entity("TIN_Project.Server.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
