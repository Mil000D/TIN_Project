@page "/add-cinema"
@attribute [Authorize(Roles = "Admin")]
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IAlertService AlertService
@inject IStringLocalizer<Resources.AddCinema.AddCinema> Localizer

<EditForm Model="@_addCinemaDTO" OnValidSubmit="@HandleValidSubmitAsync">
    <DataAnnotationsValidator />
    <MudText Align="Align.Center" Typo="Typo.h4" Class="mb-2">@Localizer["Add Cinema"]</MudText>
    <MudCard Elevation="20" Style="min-width: 400px;">
        <MudCardContent>
            <MudTextField Label="@Localizer["Name"]" @bind-Value="_addCinemaDTO.Name" For="@(() => _addCinemaDTO.Name)" />
            <MudTextField Label="@Localizer["Address"]" @bind-Value="_addCinemaDTO.Address" For="@(() => _addCinemaDTO.Address)" />
        </MudCardContent>
        <MudCardActions Class="justify-center">
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">@Localizer["Add"]</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>

@code {
    [CascadingParameter]
    public MainLayout Parent { get; set; }

    private AddCinemaDTO _addCinemaDTO = new AddCinemaDTO();

    private async Task HandleValidSubmitAsync()
    {
        var response = await HttpClient.PostAsJsonAsync("api/cinemas", _addCinemaDTO);
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/manage-cinemas");
            await Parent.RefreshCinemasAsync();
        }
        else
        {
            AlertService.DisplayAlert(Localizer["ErrorMessage"], Severity.Error);
        }
    }
}

