@page "/manage-users"
@attribute [Authorize(Roles = "Superuser")]
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IAlertService AlertService
@inject IStringLocalizer<Resources.ManageUsers.ManageUsers> Localizer
@inject ITokensRefreshHandler TokensRefreshHandler

<MudContainer Class="d-flex justify-center">
    <MudStack>
        <MudText Align="Align.Center" Typo="Typo.h4">@Localizer["Manage Users"]</MudText>
        @if (_users == null)
        {
            <div class="d-flex justify-center">
                <MudProgressCircular Indeterminate="true" />
            </div>
        }
        else if (_users.Count() == 0)
        {
            <div class="d-flex justify-center">
                <MudAlert Elevation="20" Severity="Severity.Info">@Localizer["No users"]</MudAlert>
            </div>
        }
        else
        {
            <MudTable Style="min-width: 800px;" @ref="@_table" Items="@_users" RowsPerPage="4" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
                <HeaderContent>
                    <MudTh>@Localizer["Username"]</MudTh>
                    <MudTh>@Localizer["Email"]</MudTh>
                    <MudTh>@Localizer["Name"]</MudTh>
                    <MudTh>@Localizer["Surname"]</MudTh>
                    <MudTh>@Localizer["Birth date"]</MudTh>
                    <MudTh>@Localizer["Is admin?"]</MudTh>
                    <MudTh>@Localizer["Actions"]</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="@Localizer["Username"]">@context.Username</MudTd>
                    <MudTd DataLabel="@Localizer["Email"]">@context.Email</MudTd>
                    <MudTd DataLabel="@Localizer["Name"]">@context.Name</MudTd>
                    <MudTd DataLabel="@Localizer["Surname"]">@context.Surname</MudTd>
                    <MudTd DataLabel="@Localizer["Birth date"]">@context.BirthDate</MudTd>
                    <MudTd DataLabel="@Localizer["Is admin?"]">@Localizer[$"{@context.IsAdmin}"]</MudTd>
                    <MudTd DataLabel="@Localizer["Actions"]">
                        <MudButton Style="background-color: red; color: white;" @onclick=@(() => DeleteUserAsync(context.IdUser))>@Localizer["Delete"]</MudButton>
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <div class="d-flex justify-center">
                        <MudPagination SelectedChanged="PageChanged" Count="@((_table.GetFilteredItemsCount() + _table.RowsPerPage - 1) / _table.RowsPerPage)" Class="pa-4" />
                    </div>
                </PagerContent>
            </MudTable>
        }
        <MudButton Style="background-color: #2196F3; color: white;" @onclick="AddAdmin">@Localizer["Add admin"]</MudButton>
    </MudStack>
</MudContainer>


@code {
    private MudTable<GetUserDTO> _table;
    private List<GetUserDTO> _users;
    protected override async Task OnInitializedAsync()
    {
        await GetUsersAsync();
    }
    private async Task GetUsersAsync()
    {
        await TokensRefreshHandler.RefreshTokensAsync();
        _users = await HttpClient.GetFromJsonAsync<List<GetUserDTO>>("api/users");
    }
    private void PageChanged(int i)
    {
        _table.NavigateTo(i - 1);
    }
    private void AddAdmin()
    {
        NavigationManager.NavigateTo("/add-admin");
    }
    private async Task DeleteUserAsync(int id)
    {
        await TokensRefreshHandler.RefreshTokensAsync();
        var response = await HttpClient.DeleteAsync($"api/users/{id}");
        if(response.IsSuccessStatusCode)
        {
            await GetUsersAsync();
        }
        else
        {
            AlertService.DisplayAlert(Localizer["DeleteErrorMessage"], Severity.Error);
        }
    }
}
